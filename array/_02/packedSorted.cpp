#include <iostream>#include <iomanip>using namespace std;#define MAX_SIZE 100int A[MAX_SIZE];int S;int indexOf(int x) {  int start = 0;  int end = S - 1;  while (start <= end) {    int mid = (start + end) / 2;    if (A[mid] == x) {      return mid;    }    else if (A[mid] < x) {      start = mid + 1;    }    else {      end = mid - 1;    }  }  return -1;}int findInsertPosition(int x) {  int start = 0;  int end = S - 1;  int insertPosition = S;  while (start <= end) {    int mid = (start + end) / 2;    if (A[mid] <= x) {      start = mid + 1;    }    else {      insertPosition = mid;      end = mid - 1;    }  }  return insertPosition;}void insert(int x) {  if (S == MAX_SIZE) {    printf("Array is full.\n");    return;  }  int insertPosition = findInsertPosition(x);  for (int i = S; i > insertPosition; i--) {    A[i] = A[i - 1];  }  A[insertPosition] = x;  S++;}void del(int index) {  for (int i = index; i < S - 1; i++) {    A[i] = A [i + 1];  }  S--;}void printArray() {  // 인덱스  for (int j = 0; j < S; j++) {    printf("%3d   ", j);  }  printf("\n");  // 요소  for (int j = 0; j < S; j++) {    printf("%3d   ", A[j]);  }  printf("\n");}int main() {  char c;  int x;  while (true) {    printf("Size: %d\n", S);    printArray();    cin >> c;    if (c == 'f') {      printf("<<<<<< Find >>>>>>\n");      printf("Enter value to find: ");      cin >> x;      int index = indexOf(x);      if (index == -1) {        printf("%d Not Found\n", x);      } else {        printf("%d Found At Index %d\n", x, index);      }    }    else if (c == 'i') {      printf("<<<<<< Insert >>>>>>\n");      printf("Enter value to insert: ");      cin >> x;      if (indexOf(x) == -1) {        insert(x);      }    }    else if (c == 'd') {      printf("<<<<<< Delete >>>>>>\n");      printf("Enter value to delete: ");      cin >> x;      int index = indexOf(x);      if (index == -1) {        printf("%d Not Found\n", x);      } else {        del(index);      }    }    else if (c == 'q') {      printf("<<<<<< Quit >>>>>>\n");      break;    }    else {      printf("Retry [f:find, i:insert, d:delete, q:quit]\n");    }  }  return 0;}